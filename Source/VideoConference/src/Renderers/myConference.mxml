<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true">
	<fx:Script>
		<![CDATA[
			import component.Message;
			
			import model.AppModel;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import object.Conference;
			
			import spark.skins.spark.ImageSkin;
			private var mySO:SharedObject;
			private var editConference:createConference = new createConference();
			private var timer:Timer = new Timer(1000);
			private function edit(event:MouseEvent):void
			{
				mySO = SharedObject.getLocal("info","/");
				mySO.data.conf = data.conference_id;
				if(mySO.flush()=="flushed")
				{
					PopUpManager.addPopUp(editConference,this.parent,true);
					PopUpManager.centerPopUp(editConference);
				}
			}
			
			private function confirmDelete(event:CloseEvent):void
			{
				if(event.detail == Alert.YES)
				{
					var conference:Conference = new Conference();
					conference.conference_id = data.conference_id;
					ro.deleteConferene(conference);
				}							
				else
					return;
			}
			
			private function remove(event:MouseEvent):void
			{
				Alert.show("Are you sure ?","Confirm",Alert.YES | Alert.NO,this,confirmDelete);
			}
			
			private function deleteConference_result(event:ResultEvent):void
			{
				Message.show("Deleting successfull",Message.Information,this);
				publicRoom.Refresh = !publicRoom.Refresh;
			}
			
			private function error(event:FaultEvent):void
			{
				Message.show(event.fault.faultString,Message.Error,this);
			}
			
			private function view(event:MouseEvent):void
			{
				mySO = SharedObject.getLocal("info","/");
				mySO.data.conf = data.conference_id;
				if(mySO.flush()=="flushed")
				{
					AppModel.getInstance().navigate("conference.html");
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:DateTimeFormatter id="dateFormatterForTime">
			<s:dateTimePattern>HH:mm</s:dateTimePattern>
		</s:DateTimeFormatter>
		<s:DateTimeFormatter id="dateFormatterForDate">
			<s:dateTimePattern>dd/MM/yyyy</s:dateTimePattern>
		</s:DateTimeFormatter>
		
		<s:RemoteObject id="ro" destination="ConferenceService">
			<s:method name="deleteConferene" result="deleteConference_result(event)" fault="error(event)"/>
			
		</s:RemoteObject>
	</fx:Declarations>
	<s:HGroup verticalAlign="middle" paddingTop="10">
		<s:HGroup textAlign="left" paddingLeft="15" verticalAlign="middle" click="view(event)">
			<s:Label width="35" color="#000000" text="{dateFormatterForTime.format(data.time_start)}" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
			<s:Label text="{dateFormatterForDate.format(data.date)}" color="#000000" width="80" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
			<s:Label text="{data.conference_name}" color="#000000" minWidth="150" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
		</s:HGroup>
		<s:HGroup textAlign="right" paddingRight="15" width="100%" horizontalAlign="right" verticalAlign="middle">
			<s:Image width="20" height="20" source="@Embed(source='images/edit.png')" click="edit(event)" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
			<s:Image width="20" height="20" source="@Embed(source='images/edit_trash.png')" click="remove(event)" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
		</s:HGroup>
	</s:HGroup>
</s:ItemRenderer>
