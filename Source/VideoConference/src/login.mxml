<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="1200" height="620" backgroundAlpha="0"
			   chromeColor="#FFFFFF" pageTitle="Đăng Nhập" applicationComplete="application1_applicationCompleteHandler(event)" initialize="initApp()">
	
	<fx:Script>
		<![CDATA[
			import component.MD5;
			import component.Message;
			import component.checkLogin;
			
			import flash.net.navigateToURL;
			
			import model.AppModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.INavigatorContent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import object.User;
			
			
			public var mySO:SharedObject;
			protected function Label_sub_clickHandler(event:MouseEvent):void //Click vào label kiểm tra username và password hợp lệ, sau đó chuyển tới TrangChu1
			{
				var check:checkLogin= new checkLogin();
				if(check.run(username.text,password.text))
				{
					ro.getUser(username.text);
				}
			}
			
			// còn mấy cái của textInput tự xử dùm M nha :">
			
			protected function close_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);				
			}
			
			protected function getUserResult(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				var user:User = event.result as User
				if(MD5.encrypt(password.text) == user.password)
				{
					mySO.data.user = user.user_id;
					if(mySO.flush() == SharedObjectFlushStatus.FLUSHED)
					{
						AppModel.getInstance().navigate("publicRoom.html");
					}
				}
				else
					Message.show("Password is incorrect",Message.Error,this,true);
			}
			
			protected function initApp():void
			{
				mySO = SharedObject.getLocal("info","/");
				if(mySO.data.user !=null)
					AppModel.getInstance().navigate("publicRoom.html");
			}
			
			protected function method1_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				Message.show("this user is not exist",Message.Error,this,true);
			}
			
			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				username.setFocus();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:RemoteObject id="ro" destination="UserService" showBusyCursor="true">
			<s:method name="getUser" result="getUserResult(event)" fault="method1_faultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Style source="conferenceSkin.css"/>
	
	<s:Image x="485" y="192" width="230" height="190" source="@Embed(source='images/boder.png')"/>
	
	<s:Label x="502" y="243" text="Username " fontWeight="bold"/>		
	<s:Label x="501" y="287" text="Password " fontWeight="bold"/>
	
	<s:TextInput id="username" x="570" y="237" tabIndex="0"/>
	<s:TextInput id="password" x="570" y="281" displayAsPassword="true" tabIndex="1"/>	
	
	<s:Label id="Label_sub" x="543" y="334" width="110" height="30" text="Log In to Flex"
			 click="Label_sub_clickHandler(event)"
			 useHandCursor="true" buttonMode="true" mouseChildren="false"/>
	
	<s:Image id="close" x="689" y="198" width="20" height="20" source="@Embed(source='images/button_close.png')" click="close_clickHandler(event)" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
	
</s:Application>
