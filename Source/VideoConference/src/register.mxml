<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="1200" height="620" backgroundAlpha="0" 
			   chromeColor="#FFFFFF" pageTitle="DMC Flex Conference" applicationComplete="application1_applicationCompleteHandler(event)" initialize="initApp()">
	
	<fx:Script>
		<![CDATA[
			import component.MD5;
			import component.Message;
			import component.checkRegister;
			import component.upload;
			
			import flash.net.FileReference;
			import flash.sampler.NewObjectSample;
			
			import mx.controls.Alert;
			import mx.core.mx_internal;
			import mx.events.FlexEvent;
			import mx.events.Request;
			import mx.managers.PopUpManager;
			import mx.rpc.Fault;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import object.User;
			
			public var user:User;
			public var mySO:SharedObject;
			protected function initApp():void
			{
				Security.loadPolicyFile("http://192.168.100.101:8080/VideoConference_Server/crossdomain.xml");
				mySO = SharedObject.getLocal("info","/");
				
				if(mySO.data.view !=null)
				{
					ro.getUser(mySO.data.view);
					this.currentState = "view";
					return;
				}
				if(mySO.data.user==null)
					this.currentState = "register";
				else 
				{
					this.currentState = "edit";
						ro.getUserById(mySO.data.user);
				}
			}
			
			protected function close_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);			
			}
			
			protected function signUp_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(this.currentState == "register")
				{
					if (checkRegister.run(txt_full_name.text, txt_username.text, txt_new_pass.text, txt_confirm_pass.text, txt_email.text,this))
					{
						ro.getUser(txt_username.text);
					}
				}
				else
					if(checkRegister.checkCurrentPassword(txt_full_name.text, txt_username.text, txt_current_pass.text, txt_new_pass.text, txt_confirm_pass.text, txt_email.text,this))
					{
						if(user.password == MD5.encrypt(txt_current_pass.text))
						{
							var tmp:User = getUserFromForm();
							tmp.user_id = mySO.data.user;
							Alert.show(tmp.user_id.toString());
							ro.updateInfo(tmp);
						}
						else
							Message.show("Current Password incorrect",Message.Error,this);
					}
				
			}
			
			protected function getUserFromForm():User
			{
				var user:User = new User();
				user.fullname = txt_full_name.text;
				user.user_name = txt_username.text;
				user.password = MD5.encrypt(txt_new_pass.text);
				user.email = txt_email.text;
				user.subcriptions = rd_free.selected==true?1:rd_basic.selected==true?2:3;
				user.avartar = "test";
				return user;
			}
			
			protected function computer_clickHandler(event:MouseEvent):void
				
			{
				// TODO Auto-generated method stub
				var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg; *.jpeg; *.gif; *.png");
				var textTypes:FileFilter = new FileFilter("Text Files (*.txt, *.rtf)", "*.txt; *.rtf");
				var allTypes:Array = new Array(imageTypes, textTypes);
				var fileRef:FileReference = new FileReference();
				fileRef.browse(allTypes);
				fileRef.addEventListener(Event.SELECT, selectHandler);
				fileRef.addEventListener(Event.COMPLETE, completeHandler);
				try
				{
					var success:Boolean = fileRef.browse();
				}
				catch (error:Error)
				{
					trace("Unable to browse for files.");
				}
				function selectHandler(event:Event):void
				{
					var request:URLRequest = new URLRequest("http://www.[yourdomain].com/fileUploadScript.cfm")
					try
					{
						fileRef.upload(request);
					}
					catch (error:Error)
					{
						trace("Unable to upload file.");
					}
				}
				function completeHandler(event:Event):void
				{
					trace("uploaded");
				}

			}
			
			protected function webcam_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			protected function createUser_resultHandler(event:ResultEvent):void
			{
				Message.show("Your account has been created successfully",Message.Information,this,true);
				PopUpManager.removePopUp(this);
			}
			
			protected function application1_applicationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				txt_full_name.setFocus();
			}
			
			protected function UpdateInfo_result(event:ResultEvent):void
			{
				Message.show("Your information was updated",Message.Information,this);
				PopUpManager.removePopUp(this);
			}
			protected function error(event:FaultEvent):void
			{
				if (event.fault.faultCode == "Server.Processing")
				{
					ro.createUser(getUserFromForm());
				}
				else
					Message.show(event.fault.faultString,Message.Error,this);
			}
			
			protected function getUserById_result(event:ResultEvent):void
			{
				user = event.result as User;
				loadUser();
			}
			
			protected function loadUser():void
			{
				txt_username.text = user.user_name;
				txt_email.text = user.email;
				txt_full_name.text = user.fullname;
				rd_free.selected = user.subcriptions == 1;
				rd_basic.selected = user.subcriptions == 2;
				rd_gold.selected = user.subcriptions == 3;
			}
			
			protected function getUser_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				user = event.result as User;
				if(this.currentState == "register")
				{
					Message.show("Username exist! ",Message.Error,this);
					txt_username.setFocus();
				}
				else
					loadUser();		
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RemoteObject id="ro" destination="UserService" showBusyCursor="true">
			<s:method name="createUser" result="createUser_resultHandler(event)" fault="error(event)"/>
			<s:method name="getUserById" result="getUserById_result(event)" fault="error(event)"/>
			<s:method name="updateInfo" result="UpdateInfo_result(event)" fault="error(event)"/>
			<s:method name="getUser" result="getUser_resultHandler(event)" fault="error(event)"/>
		</s:RemoteObject>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Style source="conferenceSkin.css"/>
	
	<s:states>
		<s:State name="register"/>
		<s:State name="edit" />
		<s:State name="view" />
	</s:states>
	<s:BorderContainer> 
		<s:borderStroke> 
			<mx:SolidColorStroke 
				color="black" 
				weight="3"/> 
		</s:borderStroke>
		
		<s:VGroup paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20">
			
			<s:HGroup verticalAlign="middle">
				<s:Label text="Full name(*) :"  width="130" fontWeight="bold"/>
				<s:TextInput id="txt_full_name" tabIndex="1"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle">
				<s:Label width="130" fontWeight="bold" text="Username (*):"/>
				<s:TextInput id="txt_username" tabIndex="2"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle" includeIn="edit">
				<s:Label text="Current Password (*): "  fontWeight="bold" width="130"/>
				<s:TextInput id="txt_current_pass" tabIndex="3" displayAsPassword="true"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle" excludeFrom="view"> 
				<s:Label text="New Password (*): " fontWeight="bold" width="130" includeIn="edit"/>
				<s:Label text="Password (*): " fontWeight="bold" width="130" includeIn="register"/>
				<s:TextInput id="txt_new_pass" tabIndex="4" displayAsPassword="true"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle" excludeFrom="view"> 
				<s:Label text="Re-type Password (*): " fontWeight="bold" width="130"/>
				<s:TextInput id="txt_confirm_pass" tabIndex="5" displayAsPassword="true"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle">
				<s:Label text="Email(*): " fontWeight="bold"  width="130"/>
				<s:TextInput id="txt_email"  tabIndex="6"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle">
				<s:Label text="Subscriptions: "  fontWeight="bold"  width="130"/>
				<s:VGroup horizontalAlign="center">
					<s:Label text="Free" width="70" height="30" fontSize="16" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
					<s:RadioButton id="rd_free" selected="true" value="1" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
				</s:VGroup>
				<s:VGroup horizontalAlign="center">
					<s:Label text="Basic" width="70" height="30" fontSize="16" fontWeight="bold"  backgroundColor="#000000" color="#FFFFFF" textAlign="center" verticalAlign="middle"/>
					<s:RadioButton id="rd_basic" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
				</s:VGroup>
				<s:VGroup horizontalAlign="center">
					<s:Label text="Gold" width="70" height="30" fontSize="16" fontWeight="bold"  backgroundColor="#000000" color="#FFFF00" textAlign="center" verticalAlign="middle"/>
					<s:RadioButton id="rd_gold" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
				</s:VGroup>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle">
				<s:Label text="Avatar "  fontWeight="bold" width="130"/>
				<s:Image source="@Embed(source='images/avatar.png')" />
				<s:Button id="computer"  label="Computer" click="computer_clickHandler(event)"/>
			</s:HGroup>
			
			<s:HGroup verticalAlign="middle" horizontalAlign="center" width="100%">
				<s:Label id="save" text="Save Changes" width="103" height="30" fontWeight="bold" textAlign="center" verticalAlign="middle" backgroundColor="#000000" color="#FFFFFF" useHandCursor="true" buttonMode="true" mouseChildren="false" click="signUp_clickHandler(event)" includeIn="edit"/>
				<s:Label id="lbl_signUp" x="565" y="467" text="Sign Up" width="71" height="30" fontWeight="bold" textAlign="center" verticalAlign="middle" backgroundColor="#000000" color="#FFFFFF" click="signUp_clickHandler(event)" useHandCursor="true" buttonMode="true" mouseChildren="false" includeIn="register"/>
				<s:Label id="cancel" text="Cancel" width="60" height="30" fontWeight="bold" textAlign="center" verticalAlign="middle" backgroundColor="#000000" color="#FFFFFF" useHandCursor="true" buttonMode="true" mouseChildren="false" click="close_clickHandler(event)"/>	
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer> 
	
<!--	<s:Image x="375" y="47" width="450" height="480" source="@Embed(source='images/boder3.png')"/>
	
	<s:Label x="468" y="77" text="Fullname: " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="460" y="107" text="Username: " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="461" y="138" text="Password: " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="415" y="168" text="Re-type Password: " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="488" y="197" text="Email: " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="440" y="243" text="Subscriptions: " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="486" y="334" text="Avatar " height="22" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="551" y="240" text="Free" width="70" height="30" fontSize="16" fontWeight="bold" textAlign="center" verticalAlign="middle"/>
	<s:Label x="629" y="240" text="Basic" width="70" height="30" fontSize="16" fontWeight="bold" textAlign="center" verticalAlign="middle" backgroundColor="#000000" color="#FFFFFF"/>
	<s:Label x="707" y="240" text="Gold" width="70" height="30" fontSize="16" fontWeight="bold" textAlign="center" verticalAlign="middle" backgroundColor="#000000" color="#FFFF00"/>
	<s:RadioButton styleName="sub_radio" id="rd_free" selected="true" x="581" y="278" value="1"/>
	<s:RadioButton styleName="sub_radio" id="rd_basic" x="659" y="278" value="2"/>
	<s:RadioButton styleName="sub_radio" id="rd_gold" x="736" y="278" value="3"/>
	

	<s:TextInput id="txt_retype_pass" displayAsPassword="true" x="551" y="167" tabIndex="3"/>
	<s:TextInput id="txt_email" x="551" y="197" tabIndex="4"/>
	<s:TextInput id="txt_password" displayAsPassword="true" x="551" y="137" tabIndex="2"/>
	<s:TextInput id="txt_fullname" x="551" y="77" tabIndex="0"/>
	<s:TextInput id="txt_username" x="551" y="107" tabIndex="1"/>
	
	
	<s:Image x="551" y="314" width="126" height="126" source="@Embed(source='images/avatar.png')"/>
	<s:Image id="close" x="798" y="53" width="20" height="20" source="@Embed(source='images/button_close.png')" click="close_clickHandler(event)" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
	
	<s:Button id="btn_computer" x="707" y="332" label="Computer" click="computer_clickHandler(event)"/>
	<s:Button id="webcam" x="707" y="366" width="76" label="Webcam" click="webcam_clickHandler(event)"/> 
	
	
	<s:Label id="lbl_signUp" x="565" y="467" text="Sign Up" width="71" height="30" fontWeight="bold" textAlign="center" verticalAlign="middle" backgroundColor="#000000" color="#FFFFFF" click="signUp_clickHandler(event)" useHandCursor="true" buttonMode="true" mouseChildren="false"/>
	-->
</s:Application>
